sudo apt-get install python-pip
sudo apt-get install software-properties-common
sudo apt-add-repository universe
sudo apt-get update
sudo apt-get install python-pip
sudo pip install keep
keep init
keep new
exit
ls
pwd

#### MIX ##############

    - name: Install the gpg key for yarn
      apt_key:
        url: "https://dl.yarnpkg.com/debian/pubkey.gpg"
        state: present
    - name: Install the yarn repos
      apt_repository:
        repo: "deb https://dl.yarnpkg.com/debian/ stable main"
        state: present
        update_cache: yes
    - name: Install the redis-server repos
      apt_repository:
        repo: ppa:chris-lea/redis-server
        state: present
        update_cache: yes


    - name: Clone rbenv
      git:
      	repo: https://github.com/rbenv/rbenv.git
      	dest: ~/.rbenv
	- name: Add .rbenv to the PATH
	  shell: |
	    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
	- name: Add .rbenvinit to .bashrc
	  shell: |
	    echo 'eval "$(rbenv init -)"' >> ~/.bashrc
	- name: Clone ruby-build
	  git:
	  	repo: https://github.com/rbenv/ruby-build.git
	  	dest: ~/.rbenv/plugins/ruby-build
	- name: Add ruby build to the PATH
	  shell: |
	  	echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
	- name: Clone rbenv-vars
	  git: 
	  	repo: https://github.com/rbenv/rbenv-vars.git
	  	dest: ~/.rbenv/plugins/rbenv-vars
	- name: Commit PATH variables to shell
	  shell: |
	    exec $SHELL
	- name: Install Ruby 2.7.0
	  shell: |
	  	rbenv install 2.7.0
	- name: Set Ruby 2.7.0 as global version
	  shell: |
	  	rbenv global 2.7.0	 
	- name: Check installed Ruby version
	  shell: |
	  	ruby -v
	- name: Install Bundler
	  shell: |
	  	gem install bundler	




######### End mix ###############333


curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo add-apt-repository ppa:chris-lea/redis-server
sudo apt-get update

################# Ruby on Rails dependencies ###################################

sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev dirmngr gnupg apt-transport-https ca-certificates redis-server redis-tools nodejs yarn


################# Ruby  with rbenv ###################################

git clone https://github.com/rbenv/rbenv.git ~/.rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
git clone https://github.com/rbenv/rbenv-vars.git ~/.rbenv/plugins/rbenv-vars
exec $SHELL
rbenv install 2.7.0
rbenv install 2.7.0


cd /etc/nginx/sites-enabled
ls
cat defauklt
cat default
ls
nano default 
sudo nano default
sudo nginx restart
sudo nginxstart
sudo nginx start
sudo service nginx restart
sudo nginx -t
cd /var/log
cd ngix
cd nginx
ls
tail -f access.log
tails -f error.log
tail -f error.log
rbenv global 2.7.0
ruby -v
gem install bundler
bundle -v
sudo apt-get install postgresql postgresql-contrib libpq-dev
sudo su - postgres
sudo su - postgres
cd qhse-fs/
cd current
rails db:migrate RAILS_ENV=production
rails db:seed RAILS_ENV=production
rails c RAILS_ENV=production
rails c production
rails c
rails console -e production
sudo apt-get update
sudo apt-get install software-properties-common
sudo add-apt-repository universe
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update
sudo apt-get install certbot python3-certbot-nginx
sudo certbot --nginx
sudo certbot renew --dry-run
cd /etc/nginx
ls
cd sites-enabled
ls
cat *
ls
cd ..
cd sites-available/
ls
cat *
sudo service nginx restart
sudo nginx -t
sudo apt-get install certbot python3-certbot-nginx
sudo certbot --nginx
cd ..
cd sites-enabled/
ls
sudo nano default 
sudo certbot --nginx
sudo service nginx restart
cd /etc/nginx
cd sites-enabled
ls
cat default 
cd /etc/nginx/sites-enabled/
ls
sudo nano default
sudo certbot --nginx
ls
cat default 
sudo nano default
sudo certbot --nginx
sudo nano default
sudo certbot --nginx
cat default 
cd qhse-fs/current
rails db:seed RAILS_ENV=production
cd qhse-fs/current
rails db:seed RAILS_ENV=production
cd qhse-fs/current
rail c -e production
rails c -e production
cd ..
cd current
rails db:migrate RAILS_ENV=production
cd qhse-fs/current
rails db:seed RAILS_ENV=production
cd qhse-fs/current
rails db:seed RAILS_ENV=production
sudo apt-get install libmagickwand-dev
sudo apt-get install imagemagick
cd qhse-fs/current
rails c -e production
cd qhse-fs/current
ls
rails c -e production
ls
cd qhse-fs/current
rails db:drop db:create db:migrate db:seed RAILS_ENV=production
rails db:drop db:create db:migrate db:seed RAILS_ENV=production DISABLE_DATABASE_ENVIRONMENT_CHECK=1
sudo systemctl restart postgresql
rails db:drop db:create db:migrate db:seed RAILS_ENV=production DISABLE_DATABASE_ENVIRONMENT_CHECK=1
sudo su - postgres
rails db:migrate db:seed RAILS_ENV=production DISABLE_DATABASE_ENVIRONMENT_CHECK=1
cd qhse-fs/current
ls
rails db:seed RAILS_ENV=production
rails  c -e production
cd qhse-fs/current
rails db:seed RAILS_ENV=production
cd qhse-fs/current
rails db:seed RAILS_ENV=production
cd qhse-fs/current
rails c -e production
ls
cd lof
cd log
ls
tail -f production.log 
cd ..
cd..
rails c -e production
cd qhse-fs/current
rails  c -e production
cd qhse-fs/current
rails c -e production
rails db:seed RAILS_ENV=production
rails c -e production
df -BM
htop
ls
cd qhse-fs/current
ls
cd log
ls -la
cat production.log 
tail -f production.log 
ls -la
df -BM
cd ..
ls
gem install backup
ls
gem install backup -v 4.2.0
ruby -v
gem install backup -v5.0.0.beta.1
rails c -e production
cd ..
ls
cd ..
ls
backup generate:model --trigger production_backup --databases='postgresql' --storages='s3'
ls
cd Backup/
ls
cat config.rb 
ls
cd models/
ls
cat production_backup.rb 
nano pro
nano production_backup.rb 
backup perform -t production_backup
cat production_backup.rb 
nano production_backup.rb 
backup perform -t production_backup
which backup
backup perform -t production_backup
cd qhse-fs/current
rails c -e production
cd qhse-fs/current
rails db:seed RAILS_ENV=production
rails c -e production
RAILS_ENV=production rails db:dump
cd ..
ls -la
cd current
cd ..
ls -kla
ls -la
cd current
RAILS_ENV=production rails db:dump
ls
cd db
ls
cat qhse_fs.dump 
ls -la
RAILS_ENV=production rake db:dump
backup perform -t production_backup
cd /
ls
cd home
ls
cd ubuntu/
ls -la
cd qhse-fs/current
RAILS_ENV=production rake db:dump
cd db/
ls
ls -la
cd qhse-fs/current
RAILS_ENV=production rake db:dump
bye
exit
sudo nginx -t
ls
ls -la
cat .bash_history 
cd qhse-fs/
ls
cd current
rails c -e production
cd ..
ls
cd psm-fs/
cd current
RAILS_ENV=production rails db:seed
ls
cd ..
ls
cd qhse-fs/current
ls -la
rails c -e production
RAILS_ENV=production rails db:seed
ls -la
cd qhse-fs/
ls
cd current/
ls
cd log
ls
ls -la
cd /etc/nginx/sites-enabled
ls
cat default 
cd qhse-fs/
railc c -e production
rails c -e production
cd current
rails c -e production
RAILS_ENV=production rails db:seed
cd /etc/nginx/sites-enabled
cat default 
cd qhse-fs/
rails c -e production
ls
cd current
rails c -e production
RAILS_ENV=production rake db:dump
ls
cd db
ls
sudo apt-get install lshw
sudo lshw
htop
cd qhse-fs/current
cd log/
tail -n 200 pro
tail -n 200 production.log 
tail -n3200 production.log 
tail -n 300 production.log 
ls
mv psm-fs psm-fsx
ls
mv qhse-fs qhse-fsx
ls
last
last
ls -la
mv qhse-fsx .qhse-fsx
ls
mv psm-fsx .psm-fsk
ls
ls -la
mv .psm-fsx .psfx
mv .psm-fsk .psfx
mv .qhse-fsx .qsfx
ls -la
last
ls
ls -la
last
cd /var/log/nginx
ls
cat access.log
cd /var/log/nginx
ls
cat access.log.1
cat access.log.2
ls
cat access.log.10.gz
62;c
cat error.log
cd /var/log/nginx
cat access.log
cat access.log.1
cat error.log
cat error.log.1
cd /var/log/nginx
cat access.log
cat error.log
ls
ls la
ls
ls -la
cd mv .qsfx qhse-fs
ls
bye
exit
ls -la
mv psfx psm-fs
mv  .psfx psm-fs
ls
ifconfig
